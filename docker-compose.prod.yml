version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: zschool_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - zschool_network
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: zschool_db_prod
    environment:
      POSTGRES_DB: zschool
      POSTGRES_USER: zschool_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - zschool_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zschool_user -d zschool"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zschool_backend_prod
    environment:
      - DATABASE_URL=postgresql://zschool_user:${POSTGRES_PASSWORD}@db:5432/zschool
      - HF_TOKEN=${HF_TOKEN}
      - XAI_TOKEN=${XAI_TOKEN}
      - CANVAS_BEARER_TOKEN=${CANVAS_BEARER_TOKEN}
      - CANVAS_USER_ID=${CANVAS_USER_ID}
      - ENVIRONMENT=production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - zschool_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: zschool_frontend_prod
    environment:
      - REACT_APP_API_URL=https://${DOMAIN}/api
      - REACT_APP_ENVIRONMENT=production
    depends_on:
      - backend
    networks:
      - zschool_network
    restart: unless-stopped

volumes:
  postgres_data_prod:

networks:
  zschool_network:
    driver: bridge 